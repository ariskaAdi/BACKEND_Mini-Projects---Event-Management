2025-06-26 20:05:18 [ERROR]: POST /auth/register User already exist {"rc":400,"success":false,"message":"User already exist"}
2025-06-26 20:25:35 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false}
2025-06-26 20:29:19 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-26 20:30:58 [ERROR]: POST /auth/login Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-06-27 21:15:03 [ERROR]: POST /auth/register Username is required {"statusCode":400,"success":false}
2025-06-27 21:16:38 [ERROR]: POST /auth/register Username is required {"statusCode":400,"success":false,"message":"Username is required"}
2025-06-27 21:17:51 [ERROR]: POST /auth/register Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-06-27 21:18:08 [ERROR]: POST /auth/register Password must be 6+ characters with uppercase, lowercase, and number {"statusCode":400,"success":false,"message":"Password must be 6+ characters with uppercase, lowercase, and number"}
2025-06-27 21:18:57 [ERROR]: POST /auth/register 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\auth.controller.ts:18:46

  15 const { name, email, password, referralCode } = req.body;
  16 
  17 try {
→ 18   const existingUser = await prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-27 21:20:13 [ERROR]: POST /auth/login Password is required and must be at least 6 characters {"statusCode":400,"success":false,"message":"Password is required and must be at least 6 characters"}
2025-06-28 00:49:27 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Tech Summit 2025",
         description: "Largest tech event in Asia",
         location: "Bandung",
         price: "100000",
                ~~~~~~~~
         isPaid: "true",
         startDate: new Date("2025-09-01T06:00:00.000Z"),
         endDate: new Date("2025-09-01T12:00:00.000Z"),
         organizerId: 1,
         seats: "300",
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751046566/jwpo4tiri8qobkcrnjer.jpg",
         category: "TECHNOLOGY"
       }
     })

Argument `price`: Invalid value provided. Expected Int, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 15:03:58 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:05:27 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:10:00 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:12:05 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:20:47 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Live Jazz Night Jakarta",
         description: "An intimate night of smooth jazz with top local artists",
         location: "Jakarta",
         price: 150000,
         isPaid: true,
         startDate: new Date("2025-08-15T19:00:00.000Z"),
         endDate: new Date("2025-08-15T22:00:00.000Z"),
         organizerId: 2,
         seats: 200,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751098847/ly4lnbktxwhixrpslwwx.jpg",
         category: "music"
                   ~~~~~~~
       }
     })

Invalid value for argument `category`. Expected EventCategory. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 15:21:35 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Live Jazz Night Jakarta",
         description: "An intimate night of smooth jazz with top local artists",
         location: "Jakarta",
         price: 150000,
         isPaid: true,
         startDate: new Date("2025-08-15T19:00:00.000Z"),
         endDate: new Date("2025-08-15T22:00:00.000Z"),
         organizerId: 2,
         seats: 200,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751098892/prrw9padytacx4ndllyo.jpg",
         category: "music"
                   ~~~~~~~
       }
     })

Invalid value for argument `category`. Expected EventCategory. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 17:09:25 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:44 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:48 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:55 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:10:27 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:23:19 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 18:35:17 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 20:53:29 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 22:33:33 [ERROR]: POST /event Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture","storageErrors":[]}
2025-06-28 22:35:03 [ERROR]: POST /event Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture","storageErrors":[]}
2025-06-28 22:44:49 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "TEST",
         description: "TEST",
         location: "TEST",
         price: 2700000,
         isPaid: true,
         startDate: new Date("2027-09-08T02:00:00.000Z"),
         endDate: new Date("2027-09-08T10:00:00.000Z"),
         organizerId: 2,
         seats: NaN,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751125486/thc4lnfm0e79d1dmaw5b.jpg",
         category: "BUSINESS",
     +   organizer: {
     +     create: UserCreateWithoutEventsInput | UserUncheckedCreateWithoutEventsInput,
     +     connectOrCreate: UserCreateOrConnectWithoutEventsInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `organizer` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 22:53:54 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "TEST",
         description: "TSET",
         location: "MALANG",
         price: 2700000,
         isPaid: true,
         startDate: new Date("2029-09-09T02:00:00.000Z"),
         endDate: new Date("2029-09-09T10:00:00.000Z"),
         organizerId: 2,
         seats: NaN,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751126031/fonxyagkyv8jknnuns3i.jpg",
         category: "BUSINESS",
     +   organizer: {
     +     create: UserCreateWithoutEventsInput | UserUncheckedCreateWithoutEventsInput,
     +     connectOrCreate: UserCreateOrConnectWithoutEventsInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `organizer` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 23:03:35 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-29 10:22:06 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-29 10:22:45 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-29 15:03:37 [ERROR]: PATCH /event/8 
Invalid `prisma.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:153:40

  150 if (req.file) {
  151   uploadImage = await cloudinaryUpload(req.file);
  152 }
→ 153 const event = await prisma.event.update({
        where: {
          id: 8
        },
        data: {
          title: "test 2 update",
          description: "test 2 update",
          location: "surabaya",
          price: 1300000,
          isPaid: "true",
                  ~~~~~~
          startDate: new Date("2025-06-29T11:05:00.000Z"),
          endDate: new Date("2025-07-01T09:04:00.000Z"),
          organizer: undefined,
          seats: 2,
          picture: "",
          category: "BUSINESS"
        }
      })

Argument `isPaid`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-30 19:44:15 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-30 20:13:13 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-30 20:30:28 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\services\auth.service.ts:57:34

  54 
  55 export const loginService = async (data: any) => {
  56   const { email, password } = data;
→ 57   const user = await prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-30 20:48:31 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:27:22

  24 };
  25 
  26 export const LoginUser = async (email: string) => {
→ 27   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-02 18:32:33 [ERROR]: POST /auth/register Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-07-02 19:43:49 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-02 20:05:37 [ERROR]: POST /auth/login Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-07-02 22:25:45 [ERROR]: GET /user/profile/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:16:38

  13 ): Promise<void> {
  14   const userId = Number(req.params.id);
  15   try {
→ 16     const user = await prisma.user.findUnique({
           where: {
         +   id: Int
           },
           select: {
             id: true,
             name: true,
             email: true,
             role: true,
             profilePicture: true,
             bio: true
           }
         })

Argument `id` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-02 22:27:33 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:128:38

  125 ): Promise<void> => {
  126   try {
  127     const userId = (req as any).user.userId;
→ 128     const user = await prisma.user.findUnique({
            where: {
              id: undefined,
          ?   email?: String,
          ?   referralCode?: String,
          ?   AND?: UserWhereInput | UserWhereInput[],
          ?   OR?: UserWhereInput[],
          ?   NOT?: UserWhereInput | UserWhereInput[],
          ?   name?: StringFilter | String,
          ?   password?: StringFilter | String,
          ?   role?: EnumRoleFilter | Role,
          ?   profilePicture?: StringNullableFilter | String | Null,
          ?   referredBy?: StringNullableFilter | String | Null,
          ?   points?: IntFilter | Int,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   bio?: StringNullableFilter | String | Null,
          ?   transactions?: TransactionListRelationFilter,
          ?   events?: EventListRelationFilter,
          ?   reviews?: ReviewListRelationFilter,
          ?   coupons?: CouponListRelationFilter,
          ?   pointHistories?: PointHistoryListRelationFilter
            },
            select: {
              id: true,
              name: true,
              email: true,
              role: true,
              profilePicture: true,
              bio: true
            }
          })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `referralCode` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-02 22:29:22 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:29:37 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:31:16 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:32:06 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:35:22 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:130:38

  127 try {
  128   const userId = res.locals.decrypt.userId;
  129   console.log("userId from token:", userId);
→ 130   const user = await prisma.user.findUnique({
          where: {
            id: undefined,
        ?   email?: String,
        ?   referralCode?: String,
        ?   AND?: UserWhereInput | UserWhereInput[],
        ?   OR?: UserWhereInput[],
        ?   NOT?: UserWhereInput | UserWhereInput[],
        ?   name?: StringFilter | String,
        ?   password?: StringFilter | String,
        ?   role?: EnumRoleFilter | Role,
        ?   profilePicture?: StringNullableFilter | String | Null,
        ?   referredBy?: StringNullableFilter | String | Null,
        ?   points?: IntFilter | Int,
        ?   createdAt?: DateTimeFilter | DateTime,
        ?   updatedAt?: DateTimeFilter | DateTime,
        ?   bio?: StringNullableFilter | String | Null,
        ?   transactions?: TransactionListRelationFilter,
        ?   events?: EventListRelationFilter,
        ?   reviews?: ReviewListRelationFilter,
        ?   coupons?: CouponListRelationFilter,
        ?   pointHistories?: PointHistoryListRelationFilter
          },
          select: {
            id: true,
            name: true,
            email: true,
            role: true,
            profilePicture: true,
            bio: true
          }
        })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `referralCode` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-04 20:55:33 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 20:59:20 [ERROR]: POST /transaction Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 20:59:39 [ERROR]: POST /transaction Invalid total paid {"statusCode":400,"success":false,"message":"Invalid total paid"}
2025-07-04 21:23:36 [ERROR]: PATCH /transaction/2 
Invalid `prisma.transaction.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:4:29

  1 import { prisma } from "../config/prisma";
  2 
  3 export const findTransactionById = async (id: number) => {
→ 4   return prisma.transaction.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 21:24:04 [ERROR]: PATCH /transaction/2 
Invalid `prisma.transaction.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:4:29

  1 import { prisma } from "../config/prisma";
  2 
  3 export const findTransactionById = async (id: number) => {
→ 4   return prisma.transaction.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 21:24:26 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:25:16 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:28:49 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:29:58 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:31:04 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:32:59 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:34:01 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:39:03 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:46:33 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:48:53 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:52:13 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:52:49 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 23:10:54 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:10:54 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:11:12 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:11:12 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:45:49 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:45:49 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:50:03 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 23:50:03 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-05 00:14:48 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-05 00:14:48 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-06 20:25:02 [ERROR]: GET /transaction/1 
Invalid `prisma.transaction.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\transaction.controller.ts:76:50

  73   throw new AppError("User not found", 404);
  74 }
  75 
→ 76 let transaction = await prisma.transaction.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-06 20:34:15 [ERROR]: POST /transaction Invalid total paid {"statusCode":400,"success":false,"message":"Invalid total paid"}
2025-07-06 20:34:36 [ERROR]: POST /transaction Invalid total paid {"statusCode":400,"success":false,"message":"Invalid total paid"}
2025-07-07 19:56:57 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-07 19:57:37 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-07 19:57:50 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-07 19:58:26 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-07 19:59:07 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-07 19:59:38 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-07 20:00:09 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-07 20:00:58 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-07 20:01:27 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-07 20:01:57 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-07 20:13:13 [ERROR]: POST /event Unauthorized: Only the organizer can create their own events {"statusCode":401,"success":false,"message":"Unauthorized: Only the organizer can create their own events"}
2025-07-07 20:15:19 [ERROR]: POST /transaction Invalid total paid {"statusCode":400,"success":false,"message":"Invalid total paid"}
2025-07-07 21:18:14 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-07 21:18:14 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-07 22:11:37 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-07 22:11:37 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-07 22:17:11 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-07 22:17:11 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-08 11:47:14 [ERROR]: GET /transaction/status/done Invalid transaction status {"statusCode":400,"success":false,"message":"Invalid transaction status"}
2025-07-08 14:08:44 [ERROR]: GET /transaction Invalid transaction status {"statusCode":400,"success":false,"message":"Invalid transaction status"}
2025-07-08 14:10:08 [ERROR]: GET /transaction Cannot read properties of undefined (reading 'toUpperCase') {}
2025-07-08 17:16:45 [ERROR]: GET /event/9 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:139:40

  136 ): Promise<void> {
  137   const eventId = Number(req.params.id);
  138   try {
→ 139     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-08 22:20:31 [ERROR]: POST /event Only organizers can access this route {"statusCode":403,"success":false,"message":"Only organizers can access this route"}
2025-07-08 22:21:47 [ERROR]: DELETE /event/11 Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:48:54 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:48:54 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:49:07 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:49:07 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:49:22 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:49:22 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:51:07 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:51:07 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:54:59 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:54:59 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:56:10 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:56:10 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:58:52 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 18:58:52 [ERROR]: GET /user/profile/get/me Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 19:04:19 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:04:19 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:04:42 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:04:42 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:09:02 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:09:02 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:16:02 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:16:02 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:19:11 [ERROR]: GET /user/profile/get/me Token expired {"statusCode":401,"success":false,"message":"Token expired"}
2025-07-09 19:24:55 [ERROR]: DELETE /event/10 
Invalid `prisma.event.delete()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:111:35

  108 };
  109 
  110 export const deleteEvent = async (eventId: number) => {
→ 111   return await prisma.event.delete(
Foreign key constraint violated on the constraint: `Transaction_eventId_fkey` {"code":"P2003","meta":{"modelName":"Event","constraint":"Transaction_eventId_fkey"},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-09 19:25:51 [ERROR]: DELETE /event/10 
Invalid `prisma.event.delete()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:111:35

  108 };
  109 
  110 export const deleteEvent = async (eventId: number) => {
→ 111   return await prisma.event.delete(
Foreign key constraint violated on the constraint: `Transaction_eventId_fkey` {"code":"P2003","meta":{"modelName":"Event","constraint":"Transaction_eventId_fkey"},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-09 19:26:32 [ERROR]: DELETE /event/10 
Invalid `prisma.event.delete()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:111:35

  108 };
  109 
  110 export const deleteEvent = async (eventId: number) => {
→ 111   return await prisma.event.delete(
Foreign key constraint violated on the constraint: `Transaction_eventId_fkey` {"code":"P2003","meta":{"modelName":"Event","constraint":"Transaction_eventId_fkey"},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-09 19:36:35 [ERROR]: PATCH /event/10 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-07-09 19:37:30 [ERROR]: PATCH /event/10 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-07-09 19:38:45 [ERROR]: PATCH /event/10 Seats must be a valid number >= 1 {"statusCode":400,"success":false,"message":"Seats must be a valid number >= 1"}
2025-07-09 19:39:25 [ERROR]: PATCH /event/10 Price must be a valid non-negative number {"statusCode":400,"success":false,"message":"Price must be a valid non-negative number"}
2025-07-09 19:39:44 [ERROR]: PATCH /event/10 
Invalid `prisma.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:86:29

  83     category: EventCategory;
  84   }
  85 ) => {
→ 86   return await prisma.event.update({
         where: {
           id: 10
         },
         data: {
           title: undefined,
           description: undefined,
           location: undefined,
           price: 75000,
           isPaid: false,
           startDate: new Date("Invalid Date"),
                      ~~~~~~~~~~~~~~~~~~~~~~~~
           endDate: new Date("Invalid Date"),
           seats: 200,
           picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1752064783/vc7g5letbo9g2ssubpsi.jpg",
           category: undefined
         }
       })

Invalid value for argument `startDate`: Provided Date object is invalid. Expected Date. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-09 19:40:55 [ERROR]: PATCH /event/10 
Invalid `prisma.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:86:29

  83     category: EventCategory;
  84   }
  85 ) => {
→ 86   return await prisma.event.update({
         where: {
           id: 10
         },
         data: {
           title: undefined,
           description: undefined,
           location: undefined,
           price: 75000,
           isPaid: false,
           startDate: new Date("Invalid Date"),
                      ~~~~~~~~~~~~~~~~~~~~~~~~
           endDate: new Date("Invalid Date"),
           seats: 200,
           picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1752064854/dumovolw2ng5dehgbajf.jpg",
           category: undefined
         }
       })

Invalid value for argument `startDate`: Provided Date object is invalid. Expected Date. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-09 19:41:41 [ERROR]: PATCH /event/10 
Invalid `prisma.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:86:29

  83     category: EventCategory;
  84   }
  85 ) => {
→ 86   return await prisma.event.update({
         where: {
           id: 10
         },
         data: {
           title: undefined,
           description: undefined,
           location: undefined,
           price: 75000,
           isPaid: false,
           startDate: new Date("Invalid Date"),
                      ~~~~~~~~~~~~~~~~~~~~~~~~
           endDate: new Date("Invalid Date"),
           seats: 200,
           picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1752064900/i4lcjuzmmwebjdc94bhv.jpg",
           category: undefined
         }
       })

Invalid value for argument `startDate`: Provided Date object is invalid. Expected Date. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-09 20:47:45 [ERROR]: GET /transaction 
Invalid `prisma.transaction.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:17:35

  14 };
  15 
  16 export const findExpiredTransactions = async (userId: number, role: string) => {
→ 17   return await prisma.transaction.findMany(
Server has closed the connection. {"code":"P1017","meta":{"modelName":"Transaction"},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-09 23:05:39 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:40:29

  37   mode: "insensitive" as const,
  38 });
  39 
→ 40 return await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-09 23:38:56 [ERROR]: POST /event Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 23:39:19 [ERROR]: POST /event Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 23:47:37 [ERROR]: POST /event Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-09 23:57:58 [ERROR]: POST /event End date must be after start date {"statusCode":400,"success":false,"message":"End date must be after start date"}
2025-07-10 18:37:47 [ERROR]: GET /event/organizer Invalid event ID {"statusCode":400,"success":false,"message":"Invalid event ID"}
2025-07-10 18:45:53 [ERROR]: GET /event/organizer Invalid event ID {"statusCode":400,"success":false,"message":"Invalid event ID"}
2025-07-10 18:47:13 [ERROR]: GET /event/organizer Invalid event ID {"statusCode":400,"success":false,"message":"Invalid event ID"}
2025-07-10 18:52:54 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:40:29

  37   mode: "insensitive" as const,
  38 });
  39 
→ 40 return await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-10 18:53:09 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 18:53:09 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 18:53:24 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 18:54:24 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:48:22

  45 };
  46 
  47 export const findUserByIdToUpdatePassword = async (id: number) => {
→ 48   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-10 18:55:10 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:48:22

  45 };
  46 
  47 export const findUserByIdToUpdatePassword = async (id: number) => {
→ 48   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"User","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-10 18:55:12 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 18:55:12 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 18:56:50 [ERROR]: GET /event/organizer Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-10 19:02:31 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:40:29

  37   mode: "insensitive" as const,
  38 });
  39 
→ 40 return await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-11 20:19:49 [ERROR]: POST /voucher 
Invalid `tx.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\voucher.repository.ts:32:20

  29 // membuat persentase harga untuk discount daari voucher
  30 const percentage = discount / 100;
  31 const newPrice = Math.max(0, Math.floor(event.price * (1 - percentage)));
→ 32 await tx.event.update(
Transaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. {"code":"P2028","meta":{"modelName":"Event","error":"Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting."},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-11 20:26:10 [ERROR]: POST /voucher 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:84:29

  81 };
  82 
  83 export const findEventByIdForTransaction = async (eventId: number) => {
→ 84   return await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-11 20:38:05 [ERROR]: GET /voucher/13 
Invalid `prisma.voucher.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\voucher.repository.ts:47:40

  44 };
  45 
  46 export const findVoucherByEventId = async (eventId: number) => {
→ 47   const voucher = await prisma.voucher.findMany({
         where: {
       +   eventId: {
       +     equals: Int | IntFieldRefInput,
       +     in: Int[] | ListIntFieldRefInput,
       +     notIn: Int[] | ListIntFieldRefInput,
       +     lt: Int | IntFieldRefInput,
       +     lte: Int | IntFieldRefInput,
       +     gt: Int | IntFieldRefInput,
       +     gte: Int | IntFieldRefInput,
       +     not: Int | NestedIntFilter
       +   }
         }
       })

Argument `eventId` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-11 20:39:55 [ERROR]: GET /voucher/13 
Invalid `prisma.voucher.findFirst()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\voucher.repository.ts:47:40

  44 };
  45 
  46 export const findVoucherByEventId = async (eventId: number) => {
→ 47   const voucher = await prisma.voucher.findFirst({
         where: {
       +   eventId: {
       +     equals: Int | IntFieldRefInput,
       +     in: Int[] | ListIntFieldRefInput,
       +     notIn: Int[] | ListIntFieldRefInput,
       +     lt: Int | IntFieldRefInput,
       +     lte: Int | IntFieldRefInput,
       +     gt: Int | IntFieldRefInput,
       +     gte: Int | IntFieldRefInput,
       +     not: Int | NestedIntFilter
       +   }
         }
       })

Argument `eventId` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-11 20:47:07 [ERROR]: GET /voucher/13 Invalid event ID {"statusCode":400,"success":false,"message":"Invalid event ID"}
2025-07-11 20:53:38 [ERROR]: GET /voucher/13 Voucher not found {"statusCode":404,"success":false,"message":"Voucher not found"}
2025-07-11 20:55:42 [ERROR]: GET /voucher/13 Voucher not found {"statusCode":404,"success":false,"message":"Voucher not found"}
2025-07-11 22:07:09 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:40:29

  37   mode: "insensitive" as const,
  38 });
  39 
→ 40 return await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-11 22:16:15 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\event.repository.ts:40:29

  37   mode: "insensitive" as const,
  38 });
  39 
→ 40 return await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-12 18:25:27 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-12 18:28:22 [ERROR]: POST /transaction Invalid voucher {"statusCode":400,"success":false,"message":"Invalid voucher"}
2025-07-12 18:30:05 [ERROR]: POST /transaction Voucher not valid at this time {"statusCode":400,"success":false,"message":"Voucher not valid at this time"}
2025-07-12 18:35:21 [ERROR]: POST /transaction Total paid doesn't match expected total {"statusCode":400,"success":false,"message":"Total paid doesn't match expected total"}
