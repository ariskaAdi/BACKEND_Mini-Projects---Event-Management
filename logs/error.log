2025-06-26 20:05:18 [ERROR]: POST /auth/register User already exist {"rc":400,"success":false,"message":"User already exist"}
2025-06-26 20:25:35 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false}
2025-06-26 20:29:19 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-26 20:30:58 [ERROR]: POST /auth/login Invalid password {"statusCode":401,"success":false,"message":"Invalid password"}
2025-06-27 21:15:03 [ERROR]: POST /auth/register Username is required {"statusCode":400,"success":false}
2025-06-27 21:16:38 [ERROR]: POST /auth/register Username is required {"statusCode":400,"success":false,"message":"Username is required"}
2025-06-27 21:17:51 [ERROR]: POST /auth/register Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-06-27 21:18:08 [ERROR]: POST /auth/register Password must be 6+ characters with uppercase, lowercase, and number {"statusCode":400,"success":false,"message":"Password must be 6+ characters with uppercase, lowercase, and number"}
2025-06-27 21:18:57 [ERROR]: POST /auth/register 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\auth.controller.ts:18:46

  15 const { name, email, password, referralCode } = req.body;
  16 
  17 try {
→ 18   const existingUser = await prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-27 21:20:13 [ERROR]: POST /auth/login Password is required and must be at least 6 characters {"statusCode":400,"success":false,"message":"Password is required and must be at least 6 characters"}
2025-06-28 00:49:27 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Tech Summit 2025",
         description: "Largest tech event in Asia",
         location: "Bandung",
         price: "100000",
                ~~~~~~~~
         isPaid: "true",
         startDate: new Date("2025-09-01T06:00:00.000Z"),
         endDate: new Date("2025-09-01T12:00:00.000Z"),
         organizerId: 1,
         seats: "300",
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751046566/jwpo4tiri8qobkcrnjer.jpg",
         category: "TECHNOLOGY"
       }
     })

Argument `price`: Invalid value provided. Expected Int, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 15:03:58 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:05:27 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:10:00 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:12:05 [ERROR]: PATCH /event/3 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture  ","storageErrors":[]}
2025-06-28 15:20:47 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Live Jazz Night Jakarta",
         description: "An intimate night of smooth jazz with top local artists",
         location: "Jakarta",
         price: 150000,
         isPaid: true,
         startDate: new Date("2025-08-15T19:00:00.000Z"),
         endDate: new Date("2025-08-15T22:00:00.000Z"),
         organizerId: 2,
         seats: 200,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751098847/ly4lnbktxwhixrpslwwx.jpg",
         category: "music"
                   ~~~~~~~
       }
     })

Invalid value for argument `category`. Expected EventCategory. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 15:21:35 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "Live Jazz Night Jakarta",
         description: "An intimate night of smooth jazz with top local artists",
         location: "Jakarta",
         price: 150000,
         isPaid: true,
         startDate: new Date("2025-08-15T19:00:00.000Z"),
         endDate: new Date("2025-08-15T22:00:00.000Z"),
         organizerId: 2,
         seats: 200,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751098892/prrw9padytacx4ndllyo.jpg",
         category: "music"
                   ~~~~~~~
       }
     })

Invalid value for argument `category`. Expected EventCategory. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 17:09:25 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:44 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:48 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:09:55 [ERROR]: GET /event/6 
Invalid `prisma.event.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:96:40

  93 ): Promise<void> {
  94   const eventId = Number(req.params.id);
  95   try {
→ 96     const event = await prisma.event.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:10:27 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 17:23:19 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 18:35:17 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 20:53:29 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-28 22:33:33 [ERROR]: POST /event Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture","storageErrors":[]}
2025-06-28 22:35:03 [ERROR]: POST /event Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"picture","storageErrors":[]}
2025-06-28 22:44:49 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "TEST",
         description: "TEST",
         location: "TEST",
         price: 2700000,
         isPaid: true,
         startDate: new Date("2027-09-08T02:00:00.000Z"),
         endDate: new Date("2027-09-08T10:00:00.000Z"),
         organizerId: 2,
         seats: NaN,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751125486/thc4lnfm0e79d1dmaw5b.jpg",
         category: "BUSINESS",
     +   organizer: {
     +     create: UserCreateWithoutEventsInput | UserUncheckedCreateWithoutEventsInput,
     +     connectOrCreate: UserCreateOrConnectWithoutEventsInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `organizer` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 22:53:54 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create({
       data: {
         title: "TEST",
         description: "TSET",
         location: "MALANG",
         price: 2700000,
         isPaid: true,
         startDate: new Date("2029-09-09T02:00:00.000Z"),
         endDate: new Date("2029-09-09T10:00:00.000Z"),
         organizerId: 2,
         seats: NaN,
         picture: "https://res.cloudinary.com/dzvpb6m6w/image/upload/v1751126031/fonxyagkyv8jknnuns3i.jpg",
         category: "BUSINESS",
     +   organizer: {
     +     create: UserCreateWithoutEventsInput | UserUncheckedCreateWithoutEventsInput,
     +     connectOrCreate: UserCreateOrConnectWithoutEventsInput,
     +     connect: UserWhereUniqueInput
     +   }
       }
     })

Argument `organizer` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-28 23:03:35 [ERROR]: POST /event 
Invalid `prisma.event.create()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:41:40

  38 if (req.file) {
  39   uploadImage = await cloudinaryUpload(req.file);
  40 }
→ 41 const event = await prisma.event.create(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-06-29 10:22:06 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-29 10:22:45 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-29 15:03:37 [ERROR]: PATCH /event/8 
Invalid `prisma.event.update()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:153:40

  150 if (req.file) {
  151   uploadImage = await cloudinaryUpload(req.file);
  152 }
→ 153 const event = await prisma.event.update({
        where: {
          id: 8
        },
        data: {
          title: "test 2 update",
          description: "test 2 update",
          location: "surabaya",
          price: 1300000,
          isPaid: "true",
                  ~~~~~~
          startDate: new Date("2025-06-29T11:05:00.000Z"),
          endDate: new Date("2025-07-01T09:04:00.000Z"),
          organizer: undefined,
          seats: 2,
          picture: "",
          category: "BUSINESS"
        }
      })

Argument `isPaid`: Invalid value provided. Expected Boolean or BoolFieldUpdateOperationsInput, provided String. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-06-30 19:44:15 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-30 20:13:13 [ERROR]: POST /auth/register User already exist {"statusCode":400,"success":false,"message":"User already exist"}
2025-06-30 20:30:28 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\services\auth.service.ts:57:34

  54 
  55 export const loginService = async (data: any) => {
  56   const { email, password } = data;
→ 57   const user = await prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-06-30 20:48:31 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:27:22

  24 };
  25 
  26 export const LoginUser = async (email: string) => {
→ 27   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-02 18:32:33 [ERROR]: POST /auth/register Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-07-02 19:43:49 [ERROR]: GET /event 
Invalid `prisma.event.findMany()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\event.controller.ts:69:41

  66 ): Promise<void> {
  67   const { category, title, location } = req.query;
  68   try {
→ 69     const events = await prisma.event.findMany(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"code":"P1001","meta":{"modelName":"Event","database_host":"aws-0-us-west-1.pooler.supabase.com","database_port":6543},"clientVersion":"6.10.1","name":"PrismaClientKnownRequestError"}
2025-07-02 20:05:37 [ERROR]: POST /auth/login Invalid email format {"statusCode":400,"success":false,"message":"Invalid email format"}
2025-07-02 22:25:45 [ERROR]: GET /user/profile/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:16:38

  13 ): Promise<void> {
  14   const userId = Number(req.params.id);
  15   try {
→ 16     const user = await prisma.user.findUnique({
           where: {
         +   id: Int
           },
           select: {
             id: true,
             name: true,
             email: true,
             role: true,
             profilePicture: true,
             bio: true
           }
         })

Argument `id` is missing. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-02 22:27:33 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:128:38

  125 ): Promise<void> => {
  126   try {
  127     const userId = (req as any).user.userId;
→ 128     const user = await prisma.user.findUnique({
            where: {
              id: undefined,
          ?   email?: String,
          ?   referralCode?: String,
          ?   AND?: UserWhereInput | UserWhereInput[],
          ?   OR?: UserWhereInput[],
          ?   NOT?: UserWhereInput | UserWhereInput[],
          ?   name?: StringFilter | String,
          ?   password?: StringFilter | String,
          ?   role?: EnumRoleFilter | Role,
          ?   profilePicture?: StringNullableFilter | String | Null,
          ?   referredBy?: StringNullableFilter | String | Null,
          ?   points?: IntFilter | Int,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   bio?: StringNullableFilter | String | Null,
          ?   transactions?: TransactionListRelationFilter,
          ?   events?: EventListRelationFilter,
          ?   reviews?: ReviewListRelationFilter,
          ?   coupons?: CouponListRelationFilter,
          ?   pointHistories?: PointHistoryListRelationFilter
            },
            select: {
              id: true,
              name: true,
              email: true,
              role: true,
              profilePicture: true,
              bio: true
            }
          })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `referralCode` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-02 22:29:22 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:29:37 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:31:16 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:32:06 [ERROR]: GET /user/profile/get/me Cannot read properties of undefined (reading 'userId') {}
2025-07-02 22:35:22 [ERROR]: GET /user/profile/get/me 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\controllers\user.controller.ts:130:38

  127 try {
  128   const userId = res.locals.decrypt.userId;
  129   console.log("userId from token:", userId);
→ 130   const user = await prisma.user.findUnique({
          where: {
            id: undefined,
        ?   email?: String,
        ?   referralCode?: String,
        ?   AND?: UserWhereInput | UserWhereInput[],
        ?   OR?: UserWhereInput[],
        ?   NOT?: UserWhereInput | UserWhereInput[],
        ?   name?: StringFilter | String,
        ?   password?: StringFilter | String,
        ?   role?: EnumRoleFilter | Role,
        ?   profilePicture?: StringNullableFilter | String | Null,
        ?   referredBy?: StringNullableFilter | String | Null,
        ?   points?: IntFilter | Int,
        ?   createdAt?: DateTimeFilter | DateTime,
        ?   updatedAt?: DateTimeFilter | DateTime,
        ?   bio?: StringNullableFilter | String | Null,
        ?   transactions?: TransactionListRelationFilter,
        ?   events?: EventListRelationFilter,
        ?   reviews?: ReviewListRelationFilter,
        ?   coupons?: CouponListRelationFilter,
        ?   pointHistories?: PointHistoryListRelationFilter
          },
          select: {
            id: true,
            name: true,
            email: true,
            role: true,
            profilePicture: true,
            bio: true
          }
        })

Argument `where` of type UserWhereUniqueInput needs at least one of `id`, `email` or `referralCode` arguments. Available options are marked with ?. {"name":"PrismaClientValidationError","clientVersion":"6.10.1"}
2025-07-04 20:55:33 [ERROR]: POST /auth/login 
Invalid `prisma.user.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\user.repository.ts:5:22

  2 import { prisma } from "../config/prisma";
  3 
  4 export const findUserByEmail = async (email: string) => {
→ 5   return prisma.user.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 20:59:20 [ERROR]: POST /transaction Unauthorized {"statusCode":401,"success":false,"message":"Unauthorized"}
2025-07-04 20:59:39 [ERROR]: POST /transaction Invalid total paid {"statusCode":400,"success":false,"message":"Invalid total paid"}
2025-07-04 21:23:36 [ERROR]: PATCH /transaction/2 
Invalid `prisma.transaction.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:4:29

  1 import { prisma } from "../config/prisma";
  2 
  3 export const findTransactionById = async (id: number) => {
→ 4   return prisma.transaction.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 21:24:04 [ERROR]: PATCH /transaction/2 
Invalid `prisma.transaction.findUnique()` invocation in
D:\adi\purwhadika\Mini Projects - Event Management\BACKEND\src\repositories\transaction.repository.ts:4:29

  1 import { prisma } from "../config/prisma";
  2 
  3 export const findTransactionById = async (id: number) => {
→ 4   return prisma.transaction.findUnique(
Can't reach database server at `aws-0-us-west-1.pooler.supabase.com:6543`

Please make sure your database server is running at `aws-0-us-west-1.pooler.supabase.com:6543`. {"clientVersion":"6.10.1","name":"PrismaClientInitializationError"}
2025-07-04 21:24:26 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:25:16 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:28:49 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:29:58 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:31:04 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:32:59 [ERROR]: PATCH /transaction/2 Unexpected field {"name":"MulterError","message":"Unexpected field","code":"LIMIT_UNEXPECTED_FILE","field":"paymentProof","storageErrors":[]}
2025-07-04 21:34:01 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:39:03 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:46:33 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:48:53 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:52:13 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
2025-07-04 21:52:49 [ERROR]: PATCH /transaction/2 Unauthorized access {"statusCode":403,"success":false,"message":"Unauthorized access"}
